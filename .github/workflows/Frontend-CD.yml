name: Frontend CD

on:
  push:
    # branches: 
    # paths:
    #   - 'frontend/**'
  pull_request:
    # paths:
    #   - 'frontend/**'

permissions:
  id-token: write
  contents: read

env:
    AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }} 
    AWS_REGION: ap-southeast-2
    SOURCE_DIR: frontend/dist
    CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} 
    AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}

jobs:
  frontend-cd:
    name: Deploy Frontend to S3
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     working-directory: frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: frontend

      # - name: Start development server
      #   run: pnpm run dev

      - name: Build Frontend
        run: pnpm exec vite build
        working-directory: frontend

      - name: Configure AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: frontend-deploy

      - name: Dump GitHub OIDC token claims
        run: |
          curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq .

      - name: Upload to S3
        run: aws s3 sync frontend/dist s3://${{ env.AWS_S3_BUCKET }} --delete

      - name: Invalidate CloudFront
        run: |
         aws cloudfront create-invalidation \
           --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
           --paths "/*"